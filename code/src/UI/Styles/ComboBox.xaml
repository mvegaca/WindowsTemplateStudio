<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:services="clr-namespace:Microsoft.Templates.UI.Services"
                    xmlns:Themes="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:controls="clr-namespace:Microsoft.Templates.UI.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/_Thickness.xaml" />
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/ImageEx.xaml" />
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="{Binding ComboBoxBackground, Source={x:Static services:UIStylesService.Instance}}"
                        BorderBrush="{Binding ComboBoxBorder, Source={x:Static services:UIStylesService.Instance}}"
                        BorderThickness="{TemplateBinding BorderThickness}"                        
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="splitBorder"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            HorizontalAlignment="Right"
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path
                                x:Name="arrow"
                                Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                Fill="{Binding ComboBoxGlyph, Source={x:Static services:UIStylesService.Instance}}"
                                HorizontalAlignment="Center"
                                Margin="0"
                                VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding ComboBoxGlyphHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding ComboBoxBackgroundHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding ComboBoxSelection, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding ComboBoxGlyphPressed, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding ComboBoxBackgroundPressed, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding ComboBoxBorderPressed, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding ComboBoxGlyphDisabled, Source={x:Static services:UIStylesService.Instance}}"/>
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding ComboBoxBackgroundDisabled, Source={x:Static services:UIStylesService.Instance}}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding ComboBoxBorderDisabled, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsKeyboardFocused , RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" Value="True">
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding ComboBoxGlyphHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding ComboBoxBackgroundHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding ComboBoxSelection, Source={x:Static services:UIStylesService.Instance}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WtsComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Title}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding ComboBoxListItemText, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding ComboBoxListItemTextHover, Source={x:Static services:UIStylesService.Instance}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding ComboBoxListItemBackgroundHover, Source={x:Static services:UIStylesService.Instance}}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding ComboBoxListItemBorderHover, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding ComboBoxListItemTextHover, Source={x:Static services:UIStylesService.Instance}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding ComboBoxListItemBackgroundHover, Source={x:Static services:UIStylesService.Instance}}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding ComboBoxListItemBorderHover, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding ComboBoxBackground, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="Bd" Value="{Binding ComboBoxSelection, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding ComboBoxSelection, Source={x:Static services:UIStylesService.Instance}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WtsComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{Binding ComboBoxBackground, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderBrush" Value="{Binding ComboBoxBorder, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="Foreground" Value="{Binding ComboBoxText, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource WtsComboBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="true"
                            Grid.ColumnSpan="2"
                            IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="1"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                            Placement="Bottom">
                            <!--<Themes:SystemDropShadowChrome
                                x:Name="shadow"
                                Color="Transparent"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                MinWidth="{Binding ActualWidth, ElementName=templateRoot}">-->
                                <Border
                                    x:Name="dropDownBorder"
                                    BorderBrush="{Binding ComboBoxBorder, Source={x:Static services:UIStylesService.Instance}}"
                                    BorderThickness="1"
                                    Background="{Binding ComboBoxBackground, Source={x:Static services:UIStylesService.Instance}}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle
                                                    x:Name="opaqueRect"
                                                    Fill="{Binding Background, ElementName=dropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <!--KeyboardNavigation.DirectionalNavigation="Contained"-->
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            <!--</Themes:SystemDropShadowChrome>-->
                        </Popup>
                        <ToggleButton
                            x:Name="toggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsHitTestVisible="false"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="{Binding ComboBoxListBackgroundShadow, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>-->
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Foreground" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--ProjectType and Framework-->
    <Style x:Key="ComboBoxMetadataToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="Transparent"
                        BorderThickness="{TemplateBinding BorderThickness}"                        
                        SnapsToDevicePixels="true">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WtsComboBoxItemMetadataStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Title}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" BorderBrush="Transparent">
                        <!--<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />-->
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <controls:ImageEx
                                x:Name="icon"
                                Grid.Column="0"
                                SourcePath="{Binding Icon}"
                                Style="{StaticResource WtsImageExProjectDetails}" />
                            <TextBlock
                                x:Name="name"
                                Grid.Column="1"
                                Text="{Binding Title}"
                                Margin="{StaticResource Margin_M_Left}"
                                Style="{StaticResource WtsTextBlockComboBoxItem}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" TargetName="name" Value="{Binding ComboBoxListItemText, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" TargetName="name" Value="{Binding ListItemMouseOverText, Source={x:Static services:UIStylesService.Instance}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding ListItemMouseOver, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="name" Value="{Binding ListItemMouseOverText, Source={x:Static services:UIStylesService.Instance}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding ListItemMouseOver, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsHighContrast, Source={x:Static services:SystemService.Current}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="icon" Value="{Binding ListItemMouseOverText, Source={x:Static services:UIStylesService.Instance}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsHighContrast, Source={x:Static services:SystemService.Current}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="icon" Value="{Binding ListItemMouseOverText, Source={x:Static services:UIStylesService.Instance}}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="Foreground" TargetName="icon" Value="{Binding SelectedItemActiveText, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Foreground" TargetName="name" Value="{Binding SelectedItemActiveText, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="Bd" Value="{Binding SelectedItemActive, Source={x:Static services:UIStylesService.Instance}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WtsComboBoxProjectTypeStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{Binding ComboBoxBackground, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderBrush" Value="{Binding ComboBoxBorder, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="Foreground" Value="{Binding ComboBoxText, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource WtsComboBoxItemMetadataStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="true"
                                Grid.ColumnSpan="2"
                                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="1"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                Placement="Bottom">
                                <!--<Themes:SystemDropShadowChrome
                                    x:Name="shadow"
                                    Color="Transparent"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}">-->
                                    <Border
                                        x:Name="dropDownBorder"
                                        BorderBrush="{Binding ComboBoxBorder, Source={x:Static services:UIStylesService.Instance}}"
                                        BorderThickness="1"
                                        Background="{Binding ComboBoxBackground, Source={x:Static services:UIStylesService.Instance}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle
                                                        x:Name="opaqueRect"
                                                        Fill="{Binding Background, ElementName=dropDownBorder}"
                                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter
                                                    x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <!--KeyboardNavigation.DirectionalNavigation="Contained"-->
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                <!--</Themes:SystemDropShadowChrome>-->
                            </Popup>
                            <ToggleButton
                                x:Name="toggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.ColumnSpan="2"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ComboBoxMetadataToggleButton}" />
                            <Grid
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsHitTestVisible="false"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <controls:ImageEx
                                    x:Name="icon"
                                    Grid.Column="0"
                                    SourcePath="{Binding ProjectType.Selected.Icon}"
                                    Style="{StaticResource WtsImageExProjectDetails}" />
                                <TextBlock
                                    Grid.Column="1"
                                    Text="{Binding ProjectType.Selected.Title}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Margin="{StaticResource Margin_M_Left}"
                                    Style="{StaticResource WtsTextBlockComboBoxItem}" />
                            </Grid>
                            <Border
                                Grid.Column="1"
                                BorderBrush="Transparent"
                                HorizontalAlignment="Right"
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path
                                    x:Name="arrow"
                                    Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                    Fill="{Binding ComboBoxGlyph, Source={x:Static services:UIStylesService.Instance}}"
                                    HorizontalAlignment="Center"
                                    Margin="0"
                                    VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" TargetName="icon" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding ComboBoxBackgroundHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding ComboBoxSelection, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding ComboBoxGlyphHover, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="icon" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding ComboBoxBackgroundHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding ComboBoxSelection, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding ComboBoxGlyphHover, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="{Binding ComboBoxListBackgroundShadow, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>-->
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WtsComboBoxFrameworkStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{Binding ComboBoxBackground, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderBrush" Value="{Binding ComboBoxBorder, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="Foreground" Value="{Binding ComboBoxText, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource WtsComboBoxItemMetadataStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="true"
                                Grid.ColumnSpan="2"
                                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="1"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                Placement="Bottom">
                                <!--<Themes:SystemDropShadowChrome
                                    x:Name="shadow"
                                    Color="Transparent"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}">-->
                                    <Border
                                        x:Name="dropDownBorder"
                                        BorderBrush="{Binding ComboBoxBorder, Source={x:Static services:UIStylesService.Instance}}"
                                        BorderThickness="1"
                                        Background="{Binding ComboBoxBackground, Source={x:Static services:UIStylesService.Instance}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle
                                                        x:Name="opaqueRect"
                                                        Fill="{Binding Background, ElementName=dropDownBorder}"
                                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter
                                                    x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <!--KeyboardNavigation.DirectionalNavigation="Contained"-->
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                <!--</Themes:SystemDropShadowChrome>-->
                            </Popup>
                            <ToggleButton
                                x:Name="toggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.ColumnSpan="2"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ComboBoxMetadataToggleButton}" />
                            <Grid
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsHitTestVisible="false"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <controls:ImageEx
                                    x:Name="icon"
                                    Grid.Column="0"
                                    SourcePath="{Binding Framework.Selected.Icon}"
                                    Style="{StaticResource WtsImageExProjectDetails}" />
                                <TextBlock
                                    Grid.Column="1"
                                    Text="{Binding Framework.Selected.Title}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Margin="{StaticResource Margin_M_Left}"
                                    Style="{StaticResource WtsTextBlockComboBoxItem}" />
                            </Grid>
                            <Border
                                Grid.Column="1"
                                BorderBrush="Transparent"
                                HorizontalAlignment="Right"
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path
                                    x:Name="arrow"
                                    Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                    Fill="{Binding ComboBoxGlyph, Source={x:Static services:UIStylesService.Instance}}"
                                    HorizontalAlignment="Center"
                                    Margin="0"
                                    VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" TargetName="icon" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding ComboBoxBackgroundHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding ComboBoxSelection, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding ComboBoxGlyphHover, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="icon" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ComboBoxTextHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding ComboBoxBackgroundHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding ComboBoxSelection, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding ComboBoxGlyphHover, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="{Binding ComboBoxListBackgroundShadow, Source={x:Static services:UIStylesService.Instance}}"/>
                        </Trigger>-->
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
